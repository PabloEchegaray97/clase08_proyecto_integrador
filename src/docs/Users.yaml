paths:
  /products:
    get:
      summary: Gets all products
      tags:
        - Products
      responses:
        "200":
          description: Products listed correctly
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  totalDocs:
                    type: integer
                  limit:
                    type: integer
                  totalPages:
                    type: integer
                  page:
                    type: integer
                  pagingCounter:
                    type: integer
                  hasPrevPage:
                    type: boolean
                  hasNextPage:
                    type: boolean
                  prevPage:
                    type: integer
                  nextPage:
                    type: integer
                  prevLink:
                    type: string
                  nextLink:
                    type: string
        "500":
          description: Error interno del servidor. Query defectuosa.
    post:
      summary: Create Product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/InsertProductRequestBody'
      responses:
        "200":
          description: Product created correctly

  /products/{id}:
    get:
      summary: Gets a product by ID
      tags:
        - Products
      parameters:
      - name: id
        in: path
        required: true
        description: ID of the requested product
        schema:
          type: string
      responses:
        "200":
          description: Product listed correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: Can't find a product with this ID

    put:
      summary: Update a product by ID
      tags:
        - Products
      parameters:
      - name: id
        in: path
        required: true
        description: ID of the product to be updated
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/UpdateProductRequestBody'
      responses:
        "200":
          description: Product updated correctly
        "404":
          description: Can't find a product with this ID

    delete:
      summary: Delete a product by ID
      tags:
        - Products
      parameters:
      - name: id
        in: path
        required: true
        description: ID of the product to be deleted
        schema:
          type: string
      responses:
        "200":
          description: Product deleted correctly
        "404":
          description: Can't find a product with this ID

  paths:
  /products/{userId}/{productId}:
    post:
      summary: Check if a user owns a product and update it
      tags:
        - Products
      parameters:
      - name: userId
        in: path
        required: true
        description: ID of the user
        schema:
          type: string
      - name: productId
        in: path
        required: true
        description: ID of the product
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/UpdateProductOwnerRequestBody'
      responses:
        "200":
          description: Ownership checked and product updated correctly
        "404":
          description: Can't find the user or product


components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: Autogenerated ID
        name:
          type: string
          description: Product name
        price:
          type: number
          description: Product price
        photo:
          type: string
          description: Product thumbnail / photo
        id:
          type: string
          description: Testing ID / Local
        quantity:
          type: number
          description: Product quantity
        owner:
          type: string
          description: Product owner
      example:
        _id: "651cfa28972bf842e1f7f5c4"
        name: modified_product
        price: 2000
        photo: https://s3-eu-west-1.amazonaws.com/yi-files/content/2018/08/5b6e028ab0441.jpg
        quantity: 10
        id: "123"
    
  requestBodies:
    ProductOwnerRequestBody:
        description: Request body for the product owner check
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                  description: HTTP method (e.g., "create", "update", "delete")
                newProduct:
                  type: object
                  description: New product data (if applicable)
              example:
                method: "create"
                newProduct:
                  name: "new_product"
                  price: 1000
                  photo: "https://example.com/product.jpg"
                  quantity: 50
    InsertProductRequestBody:
      type: object
      properties:
        name:
          type: string
          description: Product name
        price:
          type: number
          description: Product price
        photo:
          type: string
          description: Product thumbnail / photo
        quantity:
          type: number
          description: Product quantity
      example:
        name: "new_product"
        price: 1000
        photo: "https://example.com/product.jpg"
        quantity: 50

    UpdateProductRequestBody:
      type: object
      properties:
        name:
          type: string
          description: Updated product name
        price:
          type: number
          description: Updated product price
        photo:
          type: string
          description: Updated product thumbnail / photo
        quantity:
          type: number
          description: Updated product quantity
      example:
        name: "updated_product"
        price: 1200
        photo: "https://example.com/updated_product.jpg"
        quantity: 60
