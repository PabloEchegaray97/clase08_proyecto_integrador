paths:
  /cartstest:
    get:
      summary: Gets all carts
      tags:
        - Carts
      responses:
        "200":
          description: Carts listed correctly
          content:
            application/json:
              schema:
                type: object
                properties:
                  carts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cart'
        "500":
          description: Error interno del servidor.

    post:
      summary: Create Cart
      tags:
        - Carts
      responses:
        "200":
          description: Cart created correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'

  /cartstest/{cid}:
    get:
      summary: Gets a cart by ID
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: ID of the requested cart
        schema:
          type: string
      responses:
        "200":
          description: Cart listed correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "404":
          description: Can't find a cart with this ID

  /cartstest/{cid}/purchase:
    get:
      summary: Purchase a cart
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: ID of the cart to be purchased
        schema:
          type: string
      responses:
        "200":
          description: Cart purchased correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        "404":
          description: Can't find a cart with this ID

  /cartstest/{cid}/products/{productId}:
    get:
      summary: Add a product to a cart
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: ID of the cart
        schema:
          type: string
      - name: productId
        in: path
        required: true
        description: ID of the product to be added
        schema:
          type: string
      responses:
        "200":
          description: Product added to cart correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "404":
          description: Can't find the cart or product

    delete:
      summary: Remove a product from a cart
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: ID of the cart
        schema:
          type: string
      - name: productId
        in: path
        required: true
        description: ID of the product to be removed
        schema:
          type: string
      responses:
        "200":
          description: Product removed from cart correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "404":
          description: Can't find the cart or product

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: Autogenerated ID
        products:
          type: array
          items:
            type: object
            properties:
              product:
                $ref: '#/components/schemas/Product'
              quantity:
                type: integer
      example:
        _id: "651cfa28972bf842e1f7f5c5"
        products:
          - product:
              _id: "651cfa28972bf842e1f7f5c4"
              name: modified_product
              price: 2000
              photo: https://s3-eu-west-1.amazonaws.com/yi-files/content/2018/08/5b6e028ab0441.jpg
              quantity: 10
              id: "123"

    Ticket:
      type: object
      properties:
        _id:
          type: string
          description: Autogenerated ID
        purchaser:
          type: string
          description: Email of the purchaser
        total:
          type: number
          description: Total cost of the purchase
        products:
          type: array
          items:
            type: object
            properties:
              product:
                $ref: '#/components/schemas/Product'
              quantity:
                type: integer
      example:
        _id: "651cfa28972bf842e1f7f5c7"
        purchaser: "user@example.com"
        total: 3500
        products:
          - product:
              _id: "651cfa28972bf842e1f7f5c4"
              name: modified_product
              price: 2000
              photo: https://s3-eu-west-1.amazonaws.com/yi-files/content/2018/08/5b6e028ab0441.jpg
              quantity: 2
              id: "123"
          - product:
              _id: "651cfa28972bf842e1f7f5c6"
              name: another_product
              price: 1500
              photo: https://example.com/another_product.jpg
              quantity: 1
              id: "124"

  requestBodies:
    AddProductToCartRequestBody:
      description: Request body for adding a product to a cart
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              quantity:
                type: integer
                description: Quantity of the product to be added (default is 1)
              productId:
                type: string
                description: ID of the product to be added
            example:
              quantity: 3
              productId: "651cfa28972bf842e1f7f5c8"

    RemoveProductFromCartRequestBody:
      description: Request body for removing a product from a cart
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              productId:
                type: string
                description: ID of the product to be removed
            example:
              productId: "651cfa28972bf842e1f7f5c8"
